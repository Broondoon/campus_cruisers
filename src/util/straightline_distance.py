# import numpy as np

# Node coordinates
nodes = {
    "CLE": (48.46385903, -123.3102298),
    "DTB": (48.46507839, -123.3138765),
    "ECS": (48.46113617, -123.3114484),
    "A": (48.46137124, -123.3118624),
    "B": (48.46144238, -123.3129728),
    "C": (48.46203289, -123.3130962),
    "D": (48.46231796, -123.3131413),
    "E": (48.46266252, -123.3132108),
    "F": (48.4634261, -123.3134002),
    "G": (48.46358151, -123.3134571),
    "H": (48.46357605, -123.31369),
    "I": (48.46338573, -123.3136894),
    "J": (48.46369298, -123.3136948),
    "K": (48.46388032, -123.3137345),
    "L": (48.46415135, -123.3137576),
    "M": (48.46434008, -123.3137952),
    "N": (48.46452051, -123.3138014),
    "O": (48.46409494, -123.3139299),
    "P": (48.4642546, -123.3140119),
    "Q": (48.46504341, -123.3131625),
    "R": (48.46506586, -123.312685),
    "S": (48.46463024, -123.3125868),
    "T": (48.46488847, -123.3129322),
    "U": (48.46466593, -123.3129093),
    "V": (48.46457642, -123.3131931),
    "W": (48.46456364, -123.3127486),
    "X": (48.46457441, -123.3124327),
    "Y": (48.46443914, -123.3123965),
    "Z": (48.46413512, -123.3123382),
    "AA": (48.46422774, -123.3119776),
    "AB": (48.46423205, -123.3116917),
    "AC": (48.46449269, -123.3112921),
    "AD": (48.46412866, -123.3112369),
    "AE": (48.46382278, -123.3111492),
    "AF": (48.46372154, -123.3122959),
    "AG": (48.46383685, -123.3108845),
    "AH": (48.46334868, -123.3101288),
    "AI": (48.46292716, -123.3100375),
    "AJ": (48.46330324, -123.3107835),
    "AK": (48.46284387, -123.310677),
    "AL": (48.46281106, -123.3108178),
    "AM": (48.46279339, -123.3112099),
    "AN": (48.46278394, -123.3116505),
    "AO": (48.46275083, -123.3121366),
    "AP": (48.46272276, -123.3127246),
    "AQ": (48.46366275, -123.3129571)
}

# Distances between nodes
arcs = {
    "CLE": {"DTB": 48.34},
    "DTB": {"CLE": 48.34, "Q": 62.65, "R": 53.15},
    "ECS": {},
    "A": {"B": 81.52},
    "B": {"A": 81.52},
    "C": {"D": 68.59},
    "D": {"E": 31.58},
    "E": {"F": 38.67},
    "F": {"G": 86.8},
    "G": {"H": 17.42},
    "H": {"I": 18.1},
    "I": {"H": 21.36, "J": 20.7},
    "J": {"I": 12.81},
    "K": {"L": 21.1},
    "L": {"M": 29.56},
    "M": {"N": 21.88},
    "N": {"O": 19.37},
    "O": {"P": 28.77, "L": 13.76},
    "P": {"O": 18.5, "Q": 18.89},
    "Q": {"DTB": 62.65, "R": 23.32},
    "R": {"DTB": 53.15, "Q": 34.53},
    "S": {"T": 55.97},
    "T": {"S": 38.73},
    "U": {"T": 24.59},
    "V": {"W": 22.91},
    "W": {"V": 12.92, "X": 17.25, "Y": 33.58},
    "X": {"W": 12.41},
    "Y": {"Z": 28.78},
    "Z": {"AA": 33.81},
    "AA": {"AB": 37.86},
    "AB": {"AC": 21.33},
    "AC": {"AA": 81.23},
    "AD": {"AE": 38.62, "AF": 40.4},
    "AE": {"AF": 34.53},
    "AF": {"AE": 45.14},
    "AG": {"AH": 19.82},
    "AH": {"AI": 56.92},
    "AI": {"AJ": 47.63},
    "AJ": {"AK": 59.39},
    "AK": {"AL": 48.36},
    "AL": {"AM": 10.84},
    "AM": {"AN": 28.76},
    "AN": {"AO": 85.57},
    "AO": {"AP": 108.24},
    "AP": {"AQ": 44.48},
    "AQ": {"AP": 47.48},
    "AR": {},
    "AS": {}
}

# Function to calculate distance between two nodes
def get_distance(node1, node2):
    if node1 in arcs and node2 in arcs[node1]:
        return arcs[node1][node2]
    if node2 in arcs and node1 in arcs[node2]:
        return arcs[node2][node1]
    return np.inf

# Example of accessing distances
start_node = "CLE"
end_node = "DTB"
distance = get_distance(start_node, end_node)
print(f"Distance from {start_node} to {end_node}: {distance} meters")
